swagger: '2.0'
info:
  description: "This is the API documentation for the Simulation Hockey League API. You can find out more about the SHL at [simulationhockey.com](https://simulationhockey.com/index.php). This API is a work in progress so expect future changes.\nNOTE: Whenever left unspecified, the season defaults to the current one."
  version: '1.0.0'
  title: 'Simulation Hockey League'
  contact:
    email: 'apiteam@swagger.io'
  license:
    name: 'MIT'
    url: 'https://mit-license.org/'
host: 'localhost:3000'
basePath: '/api/v1'
tags:
  - name: 'leagues'
    description: 'Listing the simulation leagues that we provide data for'
  - name: 'conferences'
    description: 'Conferences within a particular league'
  - name: 'divisions'
    description: 'Divisions within a particular league or conference'
  - name: 'team'
    description: 'Teams of fake internet hockey players'
  - name: 'players'
    description: 'A player within the SHL universe'
  - name: 'goalies'
    description: "A goalie because they apparently don't count as players."
  - name: 'games'
    description: 'A game played'
schemes:
  - 'https'
  - 'http'
paths:
  /leagues:
    get:
      tags:
        - 'leagues'
      summary: 'List of Leagues'
      description: 'A listing of the leagues that our data provides, their ids, and their abbreviations.'
      operationId: 'getAllLeagues'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/League'
  /conferences:
    get:
      tags:
        - 'conferences'
      summary: 'List of Conferences'
      description: 'Returns the conferences within a given league'
      operationId: 'getConferencesByLeague'
      produces:
        - 'application/json'
      parameters:
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Conference'
  /conferences/{conference}:
    get:
      tags:
        - 'conferences'
      summary: 'Single Conference'
      description: 'Returns a single Conference'
      operationId: 'getConferencesByID'
      produces:
        - 'application/json'
      parameters:
        - name: 'conference'
          in: 'path'
          required: true
          type: 'number'
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/Conference'
  /divisions:
    get:
      tags:
        - 'divisions'
      summary: 'List of Divisions'
      description: 'Returns all Divisions for a League and/or a Conference. NOTE: Leaving out conferenceId out returns all Divisions for given league'
      operationId: 'getDivisionsByLeague'
      produces:
        - 'application/json'
      parameters:
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'conference'
          in: 'query'
          type: 'number'
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Division'
  /divisions/{division}:
    get:
      tags:
        - 'divisions'
      summary: 'Single Division'
      description: 'Returns a single Division'
      operationId: 'getDivisionsByID'
      produces:
        - 'application/json'
      parameters:
        - name: 'division'
          in: 'path'
          required: true
          type: 'number'
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'conference'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/Conference'
  /teams:
    get:
      tags:
        - 'team'
      summary: 'List of Teams'
      description: 'Returns all teams for a League, Conference or Division. You cannot query a division without a conference'
      operationId: 'getTeamsByLeague'
      produces:
        - 'application/json'
      parameters:
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'conference'
          in: 'query'
          type: 'number'
        - name: 'division'
          in: 'query'
          type: 'number'
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Team'
  /teams/{team}:
    get:
      tags:
        - 'team'
      summary: 'List of Teams'
      description: 'Returns info about a specific team.'
      operationId: 'getLeagueTeam'
      produces:
        - 'application/json'
      parameters:
        - name: 'team'
          in: 'path'
          required: true
          type: 'number'
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'conference'
          in: 'query'
          type: 'number'
        - name: 'division'
          in: 'query'
          type: 'number'
        - name: 'season'
          in: 'query'
          type: 'number'
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Team'
  /teams/{team}/roster:
    get:
      tags:
        - 'team'
      summary: "Get a Team's Roster"
      description: 'Return a list of players for a specific team at a given time. Use full to get player info with attributes'
      operationId: 'getTeamRoster'
      produces:
        - 'application/json'
      parameters:
        - name: 'team'
          in: 'path'
          required: true
          type: 'number'
        - name: 'league'
          in: 'query'
          type: 'number'
          default: 0
        - name: 'conference'
          in: 'query'
          type: 'number'
        - name: 'division'
          in: 'query'
          type: 'number'
        - name: 'season'
          in: 'query'
          type: 'number'
        - name: 'full'
          in: 'query'
          type: 'boolean'
          default: false
      responses:
        200:
          description: 'OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/PlayerInfo'
definitions:
  League:
    type: 'object'
    properties:
      id:
        type: 'number'
      name:
        type: 'string'
        example: 'Simulation Hockey League'
      abbreviation:
        type: 'string'
        example: 'SHL'
  Conference:
    type: 'object'
    properties:
      id:
        type: 'number'
      league:
        type: 'number'
      name:
        type: 'string'
        example: 'Eastern Conference'
      season:
        type: 'number'
        example: 55
  Division:
    type: 'object'
    properties:
      id:
        type: 'number'
      league:
        type: 'number'
      conference:
        type: 'number'
      name:
        type: 'string'
        example: 'Great Lakes Division'
      season:
        type: 'number'
        example: 55
  Team:
    type: 'object'
    properties:
      id:
        type: 'number'
      season:
        type: 'number'
      league:
        type: 'number'
      conference:
        type: 'number'
      division:
        type: 'number'
      name:
        type: 'string'
        example: 'Buffalo Stampede'
      abbreviation:
        type: 'string'
        example: 'BUF'
      location:
        type: 'string'
        example: 'Buffalo'
      colors:
        type: 'object'
        properties:
          primary:
            type: 'string'
            example: '#164833'
          secondary:
            type: 'string'
            example: '#f6bf11'
  PlayerInfo:
    type: 'object'
    properties:
      id:
        type: 'number'
      team:
        type: 'number'
      league:
        type: 'number'
      season:
        type: 'number'
        example: 55
      name:
        type: 'string'
        example: 'Eric Vanderberg'
      height:
        type: 'number'
        example: 74
      weight:
        type: 'number'
        example: 210
externalDocs:
  description: 'Find out more about Swagger'
  url: 'http://swagger.io'
